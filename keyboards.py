from aiogram.types import (ReplyKeyboardMarkup, KeyboardButton,
                           InlineKeyboardMarkup, InlineKeyboardButton)
from aiogram.utils.keyboard import InlineKeyboardBuilder
from datetime import datetime, timedelta
import calendar
import config


def get_main_keyboard():
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="üóìÔ∏è –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–µ–Ω—å")],
            [KeyboardButton(text="‚ùì –ö–∞–∫ –≤—Å—ë –ø—Ä–æ—Ö–æ–¥–∏—Ç?"), KeyboardButton(text="üí∞ –£—Å–ª—É–≥–∏/–æ–ø–ª–∞—Ç–∞")],
            [KeyboardButton(text="üìä –ü—Ä–∏–º–µ—Ä—ã —Ä–∞–±–æ—Ç"), KeyboardButton(text="üë®‚Äçüíº –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
        ],
        resize_keyboard=True
    )


def get_months_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –º–µ—Å—è—Ü–µ–≤"""
    builder = InlineKeyboardBuilder()
    today = datetime.now()

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º 6 –º–µ—Å—è—Ü–µ–≤ –≤–ø–µ—Ä–µ–¥
    for i in range(6):
        month_date = today.replace(day=1) + timedelta(days=32 * i)
        month_name = month_date.strftime("%B %Y")
        builder.button(
            text=month_name,
            callback_data=f"month_{month_date.strftime('%Y-%m')}"
        )

    builder.adjust(2)
    return builder.as_markup()


def get_days_keyboard(year_month, booked_dates):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –≤—ã–±–æ—Ä–∞ –¥–Ω–µ–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –º–µ—Å—è—Ü–∞"""
    builder = InlineKeyboardBuilder()
    year, month = map(int, year_month.split('-'))

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Å—è—Ü–∞
    cal = calendar.monthcalendar(year, month)

    for week in cal:
        for day in week:
            if day != 0:
                date_obj = datetime(year, month, day)
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –ø–Ω, —Å—Ä, –ø—Ç
                if date_obj.weekday() in [0, 2, 4]:
                    date_str = date_obj.strftime("%d.%m.%Y")  # –§–æ—Ä–º–∞—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å booked_dates
                    date_iso = date_obj.strftime("%Y-%m-%d")  # –§–æ—Ä–º–∞—Ç –¥–ª—è callback
                    weekday_ru = ["–ø–Ω", "–≤—Ç", "—Å—Ä", "—á—Ç", "–ø—Ç", "—Å–±", "–≤—Å"][date_obj.weekday()]

                    if date_str in booked_dates:
                        builder.button(
                            text=f"‚ùå {day:02d} ({weekday_ru})",
                            callback_data="occupied"
                        )
                    else:
                        builder.button(
                            text=f"‚úÖ {day:02d} ({weekday_ru})",
                            callback_data=f"book_{date_iso}"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º ISO —Ñ–æ—Ä–º–∞—Ç
                        )

    builder.button(text="üîô –ù–∞–∑–∞–¥ –∫ –º–µ—Å—è—Ü–∞–º", callback_data="back_to_months")
    builder.adjust(3)
    return builder.as_markup()


def get_payment_keyboard(amount, booking_date=None, is_final=False, show_check_button=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ–ø–ª–∞—Ç—ã"""
    builder = InlineKeyboardBuilder()

    if booking_date and not is_final:
        builder.button(
            text=f"üí≥ –û–ø–ª–∞—Ç–∏—Ç—å {amount} ‚ÇΩ",
            callback_data=f"pay_deposit_{booking_date}"
        )
    elif is_final:
        builder.button(
            text=f"üí≥ –û–ø–ª–∞—Ç–∏—Ç—å {amount} ‚ÇΩ",
            callback_data="pay_final"
        )

    # –ö–Ω–æ–ø–∫–∞ "–Ø –æ–ø–ª–∞—Ç–∏–ª" –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ show_check_button=True
    if show_check_button:
        builder.button(text="‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data="check_payment")

    builder.button(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_payment")
    builder.adjust(1)
    return builder.as_markup()


def get_examples_keyboard():
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤ —Ä–∞–±–æ—Ç"""
    builder = InlineKeyboardBuilder()
    builder.button(text="üì± –ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∫–ª–∞–º—ã", callback_data="show_ads")
    # –£–ë–†–ê–õ–ò –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    builder.adjust(1)
    return builder.as_markup()


def get_admin_delivery_keyboard(user_id, booking_date, is_final_paid=False):
    """–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–æ–µ–∫—Ç–∞ –∫–ª–∏–µ–Ω—Ç—É"""
    builder = InlineKeyboardBuilder()

    if is_final_paid:
        builder.button(
            text="üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–µ–∫—Ç –∫–ª–∏–µ–Ω—Ç—É",
            callback_data=f"deliver_{user_id}_{booking_date}"
        )
    else:
        builder.button(
            text="‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–π –æ–ø–ª–∞—Ç—ã",
            callback_data="waiting_final_payment"
        )

    builder.adjust(1)
    return builder.as_markup()